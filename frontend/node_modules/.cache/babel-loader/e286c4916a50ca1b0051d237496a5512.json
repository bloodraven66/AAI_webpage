{"ast":null,"code":"var _jsxFileName = \"/home/sathvik/AAI_webpage/frontend/src/recordingPage.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RecordingPage extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      sentenceId: 0,\n      showDoneModal: false,\n      seconds: 0,\n      totalDurationRecorded: 0,\n      totalRecordingsRecorded: 0,\n      recording: false\n    };\n    this.snapshot = null;\n    this.totalSentences = null;\n    this.userDoc = null;\n  }\n\n  async componentDidMount() {\n    window.scrollTo(-100, -100);\n\n    let recordAudio = () => new Promise(async resolve => {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const mediaRecorder = new MediaRecorder(stream);\n      let audioChunks = [];\n      mediaRecorder.addEventListener(\"dataavailable\", event => {\n        audioChunks.push(event.data);\n      });\n\n      const start = () => {\n        audioChunks = [];\n        mediaRecorder.start();\n      };\n\n      const stop = () => new Promise(resolve => {\n        mediaRecorder.addEventListener(\"stop\", () => {\n          const audioBlob = new Blob(audioChunks, {\n            type: \"audio/wav\"\n          });\n          const audioUrl = URL.createObjectURL(audioBlob);\n          const audio = new Audio(audioUrl);\n\n          const play = () => audio.play();\n\n          resolve({\n            audioChunks,\n            audioBlob,\n            audioUrl,\n            play\n          });\n        });\n        mediaRecorder.stop();\n      });\n\n      resolve({\n        start,\n        stop\n      });\n    });\n\n    const recordButton = document.getElementById(\"start\");\n    const stopButton = document.getElementById(\"stop\");\n    const playButton = document.getElementById(\"play\");\n    const saveButton = document.getElementById(\"save\");\n    let recorder;\n    let audio;\n    let interval;\n    recordButton.addEventListener(\"click\", async () => {\n      recordButton.setAttribute(\"disabled\", true);\n\n      if (!recorder) {\n        recorder = await recordAudio();\n      }\n\n      recorder.start();\n      this.setState({\n        seconds: 0,\n        recording: true\n      });\n      interval = setInterval(() => this.setState({\n        seconds: this.state.seconds + 1\n      }), 1000);\n      stopButton.removeAttribute(\"disabled\");\n      playButton.setAttribute(\"disabled\", true);\n      saveButton.setAttribute(\"disabled\", true);\n    });\n    stopButton.addEventListener(\"click\", async () => {\n      recordButton.removeAttribute(\"disabled\");\n      stopButton.setAttribute(\"disabled\", true);\n      playButton.removeAttribute(\"disabled\");\n      saveButton.removeAttribute(\"disabled\");\n      audio = await recorder.stop();\n      this.setState({\n        recording: false\n      });\n      clearInterval(interval); // audio.exportWAV(createDownloadLink)\n    });\n    playButton.addEventListener(\"click\", () => {\n      audio.play();\n    });\n    saveButton.addEventListener(\"click\", () => {\n      const XHRrecord = new XMLHttpRequest();\n      const FD = new FormData();\n      FD.append('file', audio.audioBlob);\n      XHRrecord.open('POST', \"http://10.64.26.89:3001/predict/\");\n      XHRrecord.send(FD);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {},\n      children: [/*#__PURE__*/_jsxDEV(\"script\", {\n        type: \"text/javascript\",\n        children: \"document.body.innerHTML = '';\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"start\",\n          className: \"btn btn-circle btn-xl mr-4 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              position: \"relative\"\n            },\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"stop\",\n          className: \"btn btn-circle btn-xl mr-4 mb-4\",\n          disabled: true,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              position: \"relative\"\n            },\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"play\",\n          className: \"btn btn-circle btn-xl mr-4 mb-4\",\n          disabled: true,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              position: \"relative\"\n            },\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"save\",\n          className: \"btn btn-circle btn-xl mr-4 mb-4\",\n          disabled: true,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              position: \"relative\"\n            },\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default RecordingPage;","map":{"version":3,"sources":["/home/sathvik/AAI_webpage/frontend/src/recordingPage.js"],"names":["React","Component","RecordingPage","state","sentenceId","showDoneModal","seconds","totalDurationRecorded","totalRecordingsRecorded","recording","snapshot","totalSentences","userDoc","componentDidMount","window","scrollTo","recordAudio","Promise","resolve","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","audioChunks","addEventListener","event","push","data","start","stop","audioBlob","Blob","type","audioUrl","URL","createObjectURL","Audio","play","recordButton","document","getElementById","stopButton","playButton","saveButton","recorder","interval","setAttribute","setState","setInterval","removeAttribute","clearInterval","XHRrecord","XMLHttpRequest","FD","FormData","append","open","send","render","position"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\n\nclass RecordingPage extends Component {\n  state = {\n    sentenceId: 0,\n    showDoneModal: false,\n    seconds: 0,\n    totalDurationRecorded: 0,\n    totalRecordingsRecorded: 0,\n    recording: false,\n  };\n\n  snapshot = null;\n  totalSentences = null;\n  userDoc = null;\n\n  async componentDidMount() {\n    window.scrollTo(-100, -100)\n    let recordAudio = () =>\n      new Promise(async (resolve) => {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true,\n        });\n        const mediaRecorder = new MediaRecorder(stream);\n        let audioChunks = [];\n\n        mediaRecorder.addEventListener(\"dataavailable\", (event) => {\n          audioChunks.push(event.data);\n        });\n\n        const start = () => {\n          audioChunks = [];\n          mediaRecorder.start();\n        };\n\n        const stop = () =>\n          new Promise((resolve) => {\n            mediaRecorder.addEventListener(\"stop\", () => {\n              const audioBlob = new Blob(audioChunks, { type: \"audio/wav\" });\n              const audioUrl = URL.createObjectURL(audioBlob);\n              const audio = new Audio(audioUrl);\n              const play = () => audio.play();\n              resolve({ audioChunks, audioBlob, audioUrl, play });\n            });\n\n            mediaRecorder.stop();\n          });\n\n        resolve({ start, stop });\n      });\n\n    const recordButton = document.getElementById(\"start\");\n    const stopButton = document.getElementById(\"stop\");\n    const playButton = document.getElementById(\"play\");\n    const saveButton = document.getElementById(\"save\");\n\n    let recorder;\n    let audio;\n    let interval;\n\n    recordButton.addEventListener(\"click\", async () => {\n      recordButton.setAttribute(\"disabled\", true);\n\n      if (!recorder) {\n        recorder = await recordAudio();\n      }\n      recorder.start();\n\n      this.setState({ seconds: 0, recording: true });\n      interval = setInterval(\n        () => this.setState({ seconds: this.state.seconds + 1 }),\n        1000\n      );\n      stopButton.removeAttribute(\"disabled\");\n      playButton.setAttribute(\"disabled\", true);\n      saveButton.setAttribute(\"disabled\", true);\n    });\n\n    stopButton.addEventListener(\"click\", async () => {\n      recordButton.removeAttribute(\"disabled\");\n      stopButton.setAttribute(\"disabled\", true);\n      playButton.removeAttribute(\"disabled\");\n      saveButton.removeAttribute(\"disabled\");\n      audio = await recorder.stop();\n      this.setState({ recording: false });\n      clearInterval(interval);\n      // audio.exportWAV(createDownloadLink)\n    });\n\n    playButton.addEventListener(\"click\", () => {\n      audio.play();\n    });\n  \n\n    saveButton.addEventListener(\"click\", () => {\n    const XHRrecord = new XMLHttpRequest();\n    const FD = new FormData()\n    FD.append('file', audio.audioBlob);\n    XHRrecord.open('POST', \"http://10.64.26.89:3001/predict/\");\n    XHRrecord.send(FD);\n    });\n  }\n\n\n\n\n  render() {\n    return (\n\n      <div\n        style={{\n\n        }}\n\n      >\n      <script type=\"text/javascript\">\n           document.body.innerHTML = '';\n       </script>\n        <div className=\"flex-container\">\n          <button id=\"start\" className=\"btn btn-circle btn-xl mr-4 mb-4\">\n            <span style={{ position: \"relative\" }}>Start</span>\n          </button>\n          <button\n            id=\"stop\"\n            className=\"btn btn-circle btn-xl mr-4 mb-4\"\n            disabled={true}\n          >\n            <span style={{ position: \"relative\" }}>Stop</span>\n          </button>\n          <button id=\"play\" className=\"btn btn-circle btn-xl mr-4 mb-4\" disabled={true}>\n            <span style={{ position: \"relative\" }}>Play</span>\n          </button>\n          <button id=\"save\" className=\"btn btn-circle btn-xl mr-4 mb-4\" disabled={true}>\n            <span style={{ position: \"relative\" }}>Upload</span>\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default RecordingPage;\n"]},"metadata":{},"sourceType":"module"}